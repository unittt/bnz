//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AMapLocationSdkWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AMapLocationSdk), typeof(System.Object));
		L.RegFunction("Init", Init);
		L.RegFunction("SetLocationOption", SetLocationOption);
		L.RegFunction("GetLocationOption", GetLocationOption);
		L.RegFunction("SetLocationOptionDefatult", SetLocationOptionDefatult);
		L.RegFunction("StartLocation", StartLocation);
		L.RegFunction("StopLocation", StopLocation);
		L.RegFunction("DestroyLocation", DestroyLocation);
		L.RegFunction("New", _CreateAMapLocationSdk);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAMapLocationSdk(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				AMapLocationSdk obj = new AMapLocationSdk();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: AMapLocationSdk.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			AMapLocationSdk.Init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLocationOption(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			AMapLocationSdk.SetLocationOption(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLocationOption(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = AMapLocationSdk.GetLocationOption();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLocationOptionDefatult(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			AMapLocationSdk.SetLocationOptionDefatult();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartLocation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			AMapLocationSdk.StartLocation();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopLocation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			AMapLocationSdk.StopLocation();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyLocation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			AMapLocationSdk.DestroyLocation();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

