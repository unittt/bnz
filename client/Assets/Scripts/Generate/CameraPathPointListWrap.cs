//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CameraPathPointListWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CameraPathPointList), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("CleanUp", CleanUp);
		L.RegFunction(".geti", get_Item);
		L.RegFunction("get_Item", get_Item);
		L.RegFunction("IndexOf", IndexOf);
		L.RegFunction("AddPoint", AddPoint);
		L.RegFunction("RemovePoint", RemovePoint);
		L.RegFunction("PathPointAddedEvent", PathPointAddedEvent);
		L.RegFunction("PathPointRemovedEvent", PathPointRemovedEvent);
		L.RegFunction("CheckPointCullEventFromStart", CheckPointCullEventFromStart);
		L.RegFunction("CheckPointCullEventFromEnd", CheckPointCullEventFromEnd);
		L.RegFunction("GetPoint", GetPoint);
		L.RegFunction("Clear", Clear);
		L.RegFunction("DuplicatePointCheck", DuplicatePointCheck);
		L.RegFunction("ReassignCP", ReassignCP);
		L.RegFunction("ToXML", ToXML);
		L.RegFunction("FromXML", FromXML);
		L.RegVar("this", _this, null);
		L.RegVar("numberOfPoints", get_numberOfPoints, null);
		L.RegVar("realNumberOfPoints", get_realNumberOfPoints, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _get_this(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			CameraPathPoint o = obj[arg0];
			ToLua.Push(L, o);
			return 1;

		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _this(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushvalue(L, 1);
			LuaDLL.tolua_bindthis(L, _get_this, null);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			CameraPath arg0 = (CameraPath)ToLua.CheckUnityObject(L, 2, typeof(CameraPath));
			obj.Init(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CleanUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			obj.CleanUp();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Item(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			CameraPathPoint o = obj[arg0];
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IndexOf(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			CameraPathPoint arg0 = (CameraPathPoint)ToLua.CheckUnityObject(L, 2, typeof(CameraPathPoint));
			int o = obj.IndexOf(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddPoint(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(CameraPathPointList), typeof(CameraPathPoint), typeof(CameraPathControlPoint)))
			{
				CameraPathPointList obj = (CameraPathPointList)ToLua.ToObject(L, 1);
				CameraPathPoint arg0 = (CameraPathPoint)ToLua.ToObject(L, 2);
				CameraPathControlPoint arg1 = (CameraPathControlPoint)ToLua.ToObject(L, 3);
				obj.AddPoint(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(CameraPathPointList), typeof(CameraPathPoint), typeof(float)))
			{
				CameraPathPointList obj = (CameraPathPointList)ToLua.ToObject(L, 1);
				CameraPathPoint arg0 = (CameraPathPoint)ToLua.ToObject(L, 2);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 3);
				obj.AddPoint(arg0, arg1);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(CameraPathPointList), typeof(CameraPathPoint), typeof(CameraPathControlPoint), typeof(CameraPathControlPoint), typeof(float)))
			{
				CameraPathPointList obj = (CameraPathPointList)ToLua.ToObject(L, 1);
				CameraPathPoint arg0 = (CameraPathPoint)ToLua.ToObject(L, 2);
				CameraPathControlPoint arg1 = (CameraPathControlPoint)ToLua.ToObject(L, 3);
				CameraPathControlPoint arg2 = (CameraPathControlPoint)ToLua.ToObject(L, 4);
				float arg3 = (float)LuaDLL.lua_tonumber(L, 5);
				obj.AddPoint(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: CameraPathPointList.AddPoint");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemovePoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			CameraPathPoint arg0 = (CameraPathPoint)ToLua.CheckUnityObject(L, 2, typeof(CameraPathPoint));
			obj.RemovePoint(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PathPointAddedEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			CameraPathControlPoint arg0 = (CameraPathControlPoint)ToLua.CheckUnityObject(L, 2, typeof(CameraPathControlPoint));
			obj.PathPointAddedEvent(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PathPointRemovedEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			CameraPathControlPoint arg0 = (CameraPathControlPoint)ToLua.CheckUnityObject(L, 2, typeof(CameraPathControlPoint));
			obj.PathPointRemovedEvent(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckPointCullEventFromStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.CheckPointCullEventFromStart(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckPointCullEventFromEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.CheckPointCullEventFromEnd(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPoint(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(CameraPathPointList), typeof(CameraPathControlPoint)))
			{
				CameraPathPointList obj = (CameraPathPointList)ToLua.ToObject(L, 1);
				CameraPathControlPoint arg0 = (CameraPathControlPoint)ToLua.ToObject(L, 2);
				CameraPathPoint o = obj.GetPoint(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(CameraPathPointList), typeof(int)))
			{
				CameraPathPointList obj = (CameraPathPointList)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				CameraPathPoint o = obj.GetPoint(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: CameraPathPointList.GetPoint");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DuplicatePointCheck(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			CameraPathPoint o = obj.DuplicatePointCheck();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReassignCP(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			CameraPathControlPoint arg0 = (CameraPathControlPoint)ToLua.CheckUnityObject(L, 2, typeof(CameraPathControlPoint));
			CameraPathControlPoint arg1 = (CameraPathControlPoint)ToLua.CheckUnityObject(L, 3, typeof(CameraPathControlPoint));
			obj.ReassignCP(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToXML(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			string o = obj.ToXML();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FromXML(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraPathPointList obj = (CameraPathPointList)ToLua.CheckObject(L, 1, typeof(CameraPathPointList));
			System.Xml.XmlNodeList arg0 = (System.Xml.XmlNodeList)ToLua.CheckObject(L, 2, typeof(System.Xml.XmlNodeList));
			obj.FromXML(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_numberOfPoints(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPointList obj = (CameraPathPointList)o;
			int ret = obj.numberOfPoints;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index numberOfPoints on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_realNumberOfPoints(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPointList obj = (CameraPathPointList)o;
			int ret = obj.realNumberOfPoints;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index realNumberOfPoints on a nil value" : e.Message);
		}
	}
}

