//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PlatformAPIWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PlatformAPI), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Setup", Setup);
		L.RegFunction("Init", Init);
		L.RegFunction("Release", Release);
		L.RegFunction("RestartGame", RestartGame);
		L.RegFunction("GetBatteryLevel", GetBatteryLevel);
		L.RegFunction("IsBattleCharging", IsBattleCharging);
		L.RegFunction("RegisterPower", RegisterPower);
		L.RegFunction("UnregisterPower", UnregisterPower);
		L.RegFunction("getFreeMemory", getFreeMemory);
		L.RegFunction("getTotalMemory", getTotalMemory);
		L.RegFunction("getExternalStorageAvailable", getExternalStorageAvailable);
		L.RegFunction("getNetworkType", getNetworkType);
		L.RegFunction("getWifiSignal", getWifiSignal);
		L.RegFunction("getLocalMacAddress", getLocalMacAddress);
		L.RegFunction("getStorageInfos", getStorageInfos);
		L.RegFunction("GetAndroidInternalPersistencePath", GetAndroidInternalPersistencePath);
		L.RegFunction("GetBundleId", GetBundleId);
		L.RegFunction("GetDeviceUID", GetDeviceUID);
		L.RegFunction("GetDeviceId", GetDeviceId);
		L.RegFunction("GetIdfv", GetIdfv);
		L.RegFunction("GetDeviceName", GetDeviceName);
		L.RegFunction("getScreenBrightness", getScreenBrightness);
		L.RegFunction("setBrightness", setBrightness);
		L.RegFunction("SetClipBoardText", SetClipBoardText);
		L.RegFunction("GetClipBoardText", GetClipBoardText);
		L.RegFunction("OnPower", OnPower);
		L.RegFunction("OnXGRegisterResult", OnXGRegisterResult);
		L.RegFunction("OnXGRegisterWithAccountResult", OnXGRegisterWithAccountResult);
		L.RegFunction("OnSdkCallback", OnSdkCallback);
		L.RegFunction("OnInputTextChanged", OnInputTextChanged);
		L.RegFunction("OnInputReturn", OnInputReturn);
		L.RegFunction("OnEditDialogShow", OnEditDialogShow);
		L.RegFunction("OnEditDialogHide", OnEditDialogHide);
		L.RegFunction("OnSoftInputHeight", OnSoftInputHeight);
		L.RegFunction("OnLocationResult", OnLocationResult);
		L.RegVar("NET_STATE_NONE", get_NET_STATE_NONE, null);
		L.RegVar("NET_STATE_2G", get_NET_STATE_2G, null);
		L.RegVar("NET_STATE_3G", get_NET_STATE_3G, null);
		L.RegVar("NET_STATE_WIFI", get_NET_STATE_WIFI, null);
		L.RegVar("DEVICE_UNIQUE_IDENTIFIER_KEY", get_DEVICE_UNIQUE_IDENTIFIER_KEY, null);
		L.RegVar("BATTERY_STATUS_CHARGING", get_BATTERY_STATUS_CHARGING, set_BATTERY_STATUS_CHARGING);
		L.RegVar("batteryLevelOfAndroid", get_batteryLevelOfAndroid, set_batteryLevelOfAndroid);
		L.RegVar("batteryChargingOfAndroid", get_batteryChargingOfAndroid, set_batteryChargingOfAndroid);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Setup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			PlatformAPI.Setup();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			PlatformAPI.Init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Release(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			PlatformAPI.Release();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RestartGame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			PlatformAPI.RestartGame();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBatteryLevel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = PlatformAPI.GetBatteryLevel();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsBattleCharging(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			bool o = PlatformAPI.IsBattleCharging();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterPower(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			PlatformAPI.RegisterPower();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnregisterPower(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			PlatformAPI.UnregisterPower();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getFreeMemory(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			long o = PlatformAPI.getFreeMemory();
			LuaDLL.tolua_pushint64(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getTotalMemory(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			long o = PlatformAPI.getTotalMemory();
			LuaDLL.tolua_pushint64(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getExternalStorageAvailable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			long o = PlatformAPI.getExternalStorageAvailable();
			LuaDLL.tolua_pushint64(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getNetworkType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = PlatformAPI.getNetworkType();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getWifiSignal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = PlatformAPI.getWifiSignal();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getLocalMacAddress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = PlatformAPI.getLocalMacAddress();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getStorageInfos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = PlatformAPI.getStorageInfos();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAndroidInternalPersistencePath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = PlatformAPI.GetAndroidInternalPersistencePath();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBundleId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = PlatformAPI.GetBundleId();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDeviceUID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = PlatformAPI.GetDeviceUID();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDeviceId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = PlatformAPI.GetDeviceId();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetIdfv(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = PlatformAPI.GetIdfv();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDeviceName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = PlatformAPI.GetDeviceName();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getScreenBrightness(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			int o = PlatformAPI.getScreenBrightness();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setBrightness(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			PlatformAPI.setBrightness(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetClipBoardText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			PlatformAPI.SetClipBoardText(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetClipBoardText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = PlatformAPI.GetClipBoardText();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPower(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PlatformAPI obj = (PlatformAPI)ToLua.CheckObject(L, 1, typeof(PlatformAPI));
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnPower(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnXGRegisterResult(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PlatformAPI obj = (PlatformAPI)ToLua.CheckObject(L, 1, typeof(PlatformAPI));
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnXGRegisterResult(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnXGRegisterWithAccountResult(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PlatformAPI obj = (PlatformAPI)ToLua.CheckObject(L, 1, typeof(PlatformAPI));
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnXGRegisterWithAccountResult(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSdkCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PlatformAPI obj = (PlatformAPI)ToLua.CheckObject(L, 1, typeof(PlatformAPI));
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnSdkCallback(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInputTextChanged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PlatformAPI obj = (PlatformAPI)ToLua.CheckObject(L, 1, typeof(PlatformAPI));
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnInputTextChanged(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInputReturn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PlatformAPI obj = (PlatformAPI)ToLua.CheckObject(L, 1, typeof(PlatformAPI));
			obj.OnInputReturn();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEditDialogShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PlatformAPI obj = (PlatformAPI)ToLua.CheckObject(L, 1, typeof(PlatformAPI));
			obj.OnEditDialogShow();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEditDialogHide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PlatformAPI obj = (PlatformAPI)ToLua.CheckObject(L, 1, typeof(PlatformAPI));
			obj.OnEditDialogHide();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSoftInputHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PlatformAPI obj = (PlatformAPI)ToLua.CheckObject(L, 1, typeof(PlatformAPI));
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnSoftInputHeight(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnLocationResult(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PlatformAPI obj = (PlatformAPI)ToLua.CheckObject(L, 1, typeof(PlatformAPI));
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnLocationResult(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NET_STATE_NONE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, PlatformAPI.NET_STATE_NONE);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NET_STATE_2G(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, PlatformAPI.NET_STATE_2G);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NET_STATE_3G(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, PlatformAPI.NET_STATE_3G);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NET_STATE_WIFI(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, PlatformAPI.NET_STATE_WIFI);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DEVICE_UNIQUE_IDENTIFIER_KEY(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, PlatformAPI.DEVICE_UNIQUE_IDENTIFIER_KEY);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BATTERY_STATUS_CHARGING(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, PlatformAPI.BATTERY_STATUS_CHARGING);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_batteryLevelOfAndroid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, PlatformAPI.batteryLevelOfAndroid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_batteryChargingOfAndroid(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, PlatformAPI.batteryChargingOfAndroid);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BATTERY_STATUS_CHARGING(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			PlatformAPI.BATTERY_STATUS_CHARGING = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_batteryLevelOfAndroid(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			PlatformAPI.batteryLevelOfAndroid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_batteryChargingOfAndroid(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			PlatformAPI.batteryChargingOfAndroid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

