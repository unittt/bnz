//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CameraPathPointWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CameraPathPoint), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("ToXML", ToXML);
		L.RegFunction("FromXML", FromXML);
		L.RegVar("positionModes", get_positionModes, set_positionModes);
		L.RegVar("givenName", get_givenName, set_givenName);
		L.RegVar("customName", get_customName, set_customName);
		L.RegVar("fullName", get_fullName, set_fullName);
		L.RegVar("point", get_point, set_point);
		L.RegVar("index", get_index, set_index);
		L.RegVar("cpointA", get_cpointA, set_cpointA);
		L.RegVar("cpointB", get_cpointB, set_cpointB);
		L.RegVar("curvePercentage", get_curvePercentage, set_curvePercentage);
		L.RegVar("worldPosition", get_worldPosition, set_worldPosition);
		L.RegVar("lockPoint", get_lockPoint, set_lockPoint);
		L.RegVar("percent", get_percent, set_percent);
		L.RegVar("rawPercent", get_rawPercent, null);
		L.RegVar("animationPercentage", get_animationPercentage, set_animationPercentage);
		L.RegVar("displayName", get_displayName, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToXML(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraPathPoint obj = (CameraPathPoint)ToLua.CheckObject(L, 1, typeof(CameraPathPoint));
			string o = obj.ToXML();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FromXML(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			CameraPathPoint obj = (CameraPathPoint)ToLua.CheckObject(L, 1, typeof(CameraPathPoint));
			System.Xml.XmlNode arg0 = (System.Xml.XmlNode)ToLua.CheckObject(L, 2, typeof(System.Xml.XmlNode));
			CameraPath arg1 = (CameraPath)ToLua.CheckUnityObject(L, 3, typeof(CameraPath));
			obj.FromXML(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_positionModes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			CameraPathPoint.PositionModes ret = obj.positionModes;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index positionModes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_givenName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			string ret = obj.givenName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index givenName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_customName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			string ret = obj.customName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index customName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fullName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			string ret = obj.fullName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index fullName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_point(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			CameraPathControlPoint ret = obj.point;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index point on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_index(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			int ret = obj.index;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index index on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cpointA(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			CameraPathControlPoint ret = obj.cpointA;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cpointA on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cpointB(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			CameraPathControlPoint ret = obj.cpointB;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cpointB on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_curvePercentage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			float ret = obj.curvePercentage;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index curvePercentage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_worldPosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			UnityEngine.Vector3 ret = obj.worldPosition;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index worldPosition on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lockPoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			bool ret = obj.lockPoint;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index lockPoint on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_percent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			float ret = obj.percent;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index percent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rawPercent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			float ret = obj.rawPercent;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index rawPercent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_animationPercentage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			float ret = obj.animationPercentage;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index animationPercentage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_displayName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			string ret = obj.displayName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index displayName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_positionModes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			CameraPathPoint.PositionModes arg0 = (CameraPathPoint.PositionModes)(int)LuaDLL.lua_tonumber(L, 2);
			obj.positionModes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index positionModes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_givenName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.givenName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index givenName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_customName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.customName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index customName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fullName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.fullName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index fullName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_point(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			CameraPathControlPoint arg0 = (CameraPathControlPoint)ToLua.CheckUnityObject(L, 2, typeof(CameraPathControlPoint));
			obj.point = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index point on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_index(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.index = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index index on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cpointA(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			CameraPathControlPoint arg0 = (CameraPathControlPoint)ToLua.CheckUnityObject(L, 2, typeof(CameraPathControlPoint));
			obj.cpointA = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cpointA on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cpointB(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			CameraPathControlPoint arg0 = (CameraPathControlPoint)ToLua.CheckUnityObject(L, 2, typeof(CameraPathControlPoint));
			obj.cpointB = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cpointB on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_curvePercentage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.curvePercentage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index curvePercentage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_worldPosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.worldPosition = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index worldPosition on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lockPoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.lockPoint = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index lockPoint on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_percent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.percent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index percent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_animationPercentage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraPathPoint obj = (CameraPathPoint)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.animationPercentage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index animationPercentage on a nil value" : e.Message);
		}
	}
}

