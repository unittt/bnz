//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class BindGuideObjectWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(BindGuideObject), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetGuideId", GetGuideId);
		L.RegVar("guideId", get_guideId, set_guideId);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGuideId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BindGuideObject obj = (BindGuideObject)ToLua.CheckObject(L, 1, typeof(BindGuideObject));
			int o = obj.GetGuideId();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_guideId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BindGuideObject obj = (BindGuideObject)o;
			int ret = obj.guideId;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guideId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_guideId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BindGuideObject obj = (BindGuideObject)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.guideId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guideId on a nil value" : e.Message);
		}
	}
}

