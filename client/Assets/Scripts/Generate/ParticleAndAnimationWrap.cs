//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ParticleAndAnimationWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ParticleAndAnimation), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("PlaySelfAndAllChildren", PlaySelfAndAllChildren);
		L.RegFunction("EnableChildrenAll", EnableChildrenAll);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlaySelfAndAllChildren(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ParticleAndAnimation obj = (ParticleAndAnimation)ToLua.CheckObject(L, 1, typeof(ParticleAndAnimation));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.PlaySelfAndAllChildren(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableChildrenAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ParticleAndAnimation obj = (ParticleAndAnimation)ToLua.CheckObject(L, 1, typeof(ParticleAndAnimation));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.EnableChildrenAll(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

