//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AntaresQRCodeUtilWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("AntaresQRCodeUtil");
		L.RegFunction("Encode", Encode);
		L.RegFunction("Decode", Decode);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Encode(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(string), typeof(int)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				UnityEngine.Texture2D o = AntaresQRCodeUtil.Encode(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(string), typeof(int), typeof(int), typeof(int)))
			{
				string arg0 = ToLua.ToString(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				AntaresQRCodeUtil.ErrorCorrectionType arg3 = (AntaresQRCodeUtil.ErrorCorrectionType)(int)LuaDLL.lua_tonumber(L, 4);
				UnityEngine.Texture2D o = AntaresQRCodeUtil.Encode(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: AntaresQRCodeUtil.Encode");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Decode(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

            if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityEngine.WebCamTexture), typeof(int), typeof(int)))
			{
				UnityEngine.WebCamTexture arg0 = (UnityEngine.WebCamTexture)ToLua.ToObject(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 3);
				Antares.QRCode.Result o = AntaresQRCodeUtil.Decode(arg0, arg1, arg2);
                ToLua.Push(L, o != null? o.Text: "");
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: AntaresQRCodeUtil.Decode");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

