// **********************************************************************
// Copyright (c) 2016 Baoyugame. All rights reserved.
// Author : Xianjian
// Created : 9/26/2016 11:53:06 AM
// Desc	: Auto generated by MarsZ. update this if need.
// **********************************************************************

using UnityEngine;
using System.Collections.Generic;
using SdkAccountDto;

public static class SdkProxyModule
{
    private static bool _isFirstLogin = true;
    public static void OpenLogin()
    {
        List<AccountDto> accountList = SdkAccountModel.Instance.GetLastAccount();
        if (accountList.Count == 0)
        {
            OpenModule<SdkSelectLoginController>(SdkSelectLoginView.NAME);
        }
        else
        {
            if (_isFirstLogin)
                OpenModule<SdkAutoLoginController>(SdkAutoLoginView.NAME);
            else
            {
                OpenModule<SdkQuickLoginController>(SdkQuickLoginView.NAME);
            }
            //OpenModule<SdkQuickLoginController>(SdkQuickLoginView.NAME);
        }

        _isFirstLogin = false;
    }

    public static void OpenBind()
    {
        if (!SdkAccountModel.Instance.IsTempLogin())
        {
            ShowTips("由于您当前使用的不是临时账号，无法进行绑定操作");
            return;
        }

        if (SdkAccountModel.Instance.IsBound())
        {
            ShowTips("账号已绑定");
            return;
        }
        SdkBaseController.Instance.ExpandToolBar(() =>
        {
            OpenModule<SdkBindController>(SdkBindView.NAME);
        });
    }

    public static void OpenModifyPassword()
    {
        if (!SdkAccountModel.Instance.IsDemiLogin())
        {
            ShowTips("非注册账号，不能修改密码");
            return;
        }

        OpenModule<SdkModifyPasswordController>(SdkModifyPasswordView.NAME);
    }

    public static void OpenGameCenter()
    {
        SdkBaseController.Instance.ExpandToolBar(() =>
        {
            var com = OpenModule<SdkGameCenterController>(SdkGameCenterView.NAME);
            com.RefreshShow();
        });
    }

    public static void OpenBBS()
    {
        var token = SdkAccountModel.Instance.GetSid();
        var session = SdkAccountModel.Instance.GetSid();
        if (string.IsNullOrEmpty(token) || string.IsNullOrEmpty(session))
            return;

        SdkService.OpenBBS(token, session);
    }

    //打开实名制界面
    public static void OpenOfficialCardView(System.Action<bool> callback)
    {
        //清除其它界面
        ClearModule();

        var controller = OpenModule<SdkOfficialController>(SdkOfficialView.NAME);
        controller.SetCallback(callback);
    }

    public static void OpnePaySelectView(System.Action<int> onFinish)
    {
        ClearModule();

        var controller = OpenModule<SdkPayController>(SdkPayView.NAME);
        controller.SetCallback(onFinish);
    }

    public static void ClearModule()
    {
        SdkModuleMgr.Instance.ClearModule();
    }

    public static T OpenModule<T>(string name) where T : Component, IViewController
    {
        GameObject module = SdkModuleMgr.Instance.OpenModule(name);
        var com = module.GetMissingComponent<T>();
        return com;
    }

    public static void CloseModuleSlow(string name)
    {
        SdkModuleMgr.Instance.CloseModuleSlow(name);
    }

    public static void CloseModuleNow(string name)
    {
        SdkModuleMgr.Instance.CloseModule(name);
    }

    public static void ShowTips(string tips)
    {
        SdkNotifyTipController.Instance.ShowTips(tips);
    }

    public static bool HasModuleShow()
    {
        return SdkModuleMgr.Instance.HashModuleShow();
    }
}