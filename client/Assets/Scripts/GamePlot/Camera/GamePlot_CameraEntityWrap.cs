//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GamePlot_CameraEntityWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GamePlot.CameraEntity), typeof(GamePlot.PlotEntity));
		L.RegFunction("New", _CreateGamePlot_CameraEntity);
		L.RegVar("originPos", get_originPos, set_originPos);
		L.RegVar("shakeActionList", get_shakeActionList, set_shakeActionList);
		L.RegVar("tweenActionList", get_tweenActionList, set_tweenActionList);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGamePlot_CameraEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GamePlot.CameraEntity obj = new GamePlot.CameraEntity();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GamePlot.CameraEntity.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_originPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GamePlot.CameraEntity obj = (GamePlot.CameraEntity)o;
			UnityEngine.Vector3 ret = obj.originPos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index originPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shakeActionList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GamePlot.CameraEntity obj = (GamePlot.CameraEntity)o;
			System.Collections.Generic.List<GamePlot.CameraShakeAction> ret = obj.shakeActionList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index shakeActionList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tweenActionList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GamePlot.CameraEntity obj = (GamePlot.CameraEntity)o;
			System.Collections.Generic.List<GamePlot.PlotTransformAction> ret = obj.tweenActionList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tweenActionList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_originPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GamePlot.CameraEntity obj = (GamePlot.CameraEntity)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.originPos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index originPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_shakeActionList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GamePlot.CameraEntity obj = (GamePlot.CameraEntity)o;
			System.Collections.Generic.List<GamePlot.CameraShakeAction> arg0 = (System.Collections.Generic.List<GamePlot.CameraShakeAction>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<GamePlot.CameraShakeAction>));
			obj.shakeActionList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index shakeActionList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tweenActionList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GamePlot.CameraEntity obj = (GamePlot.CameraEntity)o;
			System.Collections.Generic.List<GamePlot.PlotTransformAction> arg0 = (System.Collections.Generic.List<GamePlot.PlotTransformAction>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<GamePlot.PlotTransformAction>));
			obj.tweenActionList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index tweenActionList on a nil value" : e.Message);
		}
	}
}

